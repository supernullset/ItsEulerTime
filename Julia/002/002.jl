#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
include("/Users/supernullset/LocalCode/ProjectEuler/Julia/euler_helpers.jl")
ROOT_FIVE = sqrt(5)

function fib_at_index(n)
    term1 = ((1 + ROOT_FIVE) * .5)^n
    term2 = ((1 - ROOT_FIVE) * .5)^n
    #this only works for small values of n
    floor((1/ROOT_FIVE) * (term1 - term2))
end

function sum_evens(limit=100)
    evens = Int[]
    for i=1:limit
        fib = fib_at_index(i)
        if fib > 4000000; break; end
        if fib % 2 == 0; push!(evens, fib); end
    end
    sum(evens)
end

@test sum_evens(3) == 2

println(sum_evens(100))
# ANS 4613732
